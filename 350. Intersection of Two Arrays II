/**
Given two arrays, write a function to compute their intersection.

Example 1:

Input: nums1 = [1,2,2,1], nums2 = [2,2]
Output: [2,2]
Example 2:

Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4]
Output: [4,9]
Note:

Each element in the result should appear as many times as it shows in both arrays.
The result can be in any order.
**/

class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        HashMap<Integer,Integer> countMap = new HashMap<>();
        for(int i =0;i<nums1.length;i++){
            if(countMap.containsKey(nums1[i]))
                countMap.put(nums1[i], (countMap.get(nums1[i])+1));
            else
                countMap.put(nums1[i],1);
        }
        ArrayList<Integer> resultList = new ArrayList<>();
        for(int j =0;j<nums2.length;j++){
            if(countMap.containsKey(nums2[j]) && countMap.get(nums2[j])>0){
                countMap.put(nums2[j], (countMap.get(nums2[j])-1));
                resultList.add(nums2[j]);
            }
        }
        int results[] = new int[resultList.size()];
        int k =0;
        for(int result : resultList)
          results[k++] = result;
        return results;
    }
} 	